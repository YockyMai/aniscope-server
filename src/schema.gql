# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Anime {
  banner: String
  description: String
  englishTitle: [String!]!
  episodes: AnimeEpisode!
  genres: [AnimeGenre!]!
  id: Int!
  japanTitles: [String!]!
  link: String!
  minimalAge: Int!
  otherTitles: [String!]!
  poster: String!
  rating: Int
  ratingMpa: String!
  release: DateTime!
  reviews: AnimeReview!
  season: Season!
  source: Source!
  status: Status!
  studios: [AnimeStudio!]!
  synonyms: [String!]!
  title: String!
}

type AnimeEpisode {
  description: String
  id: Int!
  image: String
  name: String!
  translations: EpisodeTranslation!
}

type AnimeGenre {
  id: Int!
  image: String!
  name: String!
}

type AnimeReview {
  comment: String
  id: Int!
  rating: Int!
  verified: Boolean!
}

type AnimeStudio {
  id: Int!
  name: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type EpisodeTranslation {
  description: String
  id: Int!
  image: String
  name: String
}

type Login {
  accessToken: String!
  user: User!
}

type Mutation {
  login(identifier: String!, password: String!): Login!
  signup(signupInput: SignupInput!): Signup!
}

type Query {
  anime(link: String!): Anime!
  episode: AnimeEpisode!
  genre: AnimeGenre!
  genres: [AnimeGenre!]!
  me: User!
  user(id: Float!): User!
}

enum Role {
  ADMIN
  DEVELOPER
  MODERATOR
  USER
}

enum Season {
  FALL
  SPRING
  SUMMER
  WINTER
}

type Signup {
  accessToken: String!
  user: User!
}

input SignupInput {
  avatar: String
  banner: String
  birthday: DateTime
  email: String!
  login: String
  name: String!
  password: String!
}

enum Source {
  ANIME
  COMIC
  DOUJINSHI
  GAME
  LIGHT_NOVEL
  LIVE_ACTION
  MANGA
  MULTIMEDIA_PROJECT
  NOVEL
  ORIGINAL
  OTHER
  PICTURE_BOOK
  VIDEO_GAME
  VISUAL_NOVEL
  WEB_NOVEL
}

enum Status {
  CANCELLED
  FINISHED
  HIATUS
  NOT_YET_RELEASED
  RELEASING
}

type User {
  avatar: String
  banner: String
  birthday: DateTime
  email: String!
  id: Int!
  login: String
  name: String!
  role: Role!
}